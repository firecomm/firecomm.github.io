(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{Dtu3:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/apireference/stubclass",function(){var e=n("ISzr");return{page:e.default||e}}])},ISzr:function(e,t,n){"use strict";n.r(t);var r=n("q1tI"),i=n.n(r),c=n("HVSj");t.default=function(e){return i.a.createElement(c.a,{subsection:"Stub",content:'# firecomm.Stub\n\n```javascript\nconst { Stub } = require( "firecomm" );\nconst service = require("./service.js");\nconst sslCertificate = require("./sslCertificate.crt");\nconst stub = new Stub(\n  service, \n  "localhost:3000", \n  { certificate: sslCertificate }\n);\n```\n\n## Constructor\n\n| Returned from   | Type   | Description                                                                                                                     |\n| --------------- | ------ | ------------------------------------------------------------------------------------------------------------------------------- |\n| `Firecomm.Stub` | Object | The `Stub` constructor generates an instance of Firecomm\'s `Stub` class, which extends the native gRPC client-service instance. |\n\nParameters:\n\n| Name    | Type/Properties | Values/Parameters | Description                                                                            |\n| ------- | --------------- | ----------------- | -------------------------------------------------------------------------------------- |\n| service | Object          |                   | `.proto` packaged and built service definition in the form of a proto-loaded JS object |\n| socket  | String          |                   | socket in the form of `IP`:`PORT`                                                      |\n| config  | Object          |                   | *optional*                                                                             |\n|         | .certificate    | path              | `string` file path to SSL certificate                                                  |\n\n\nreturns `Stub` class.\n\nStub has all methods that can be found on the [gRPC Client](https://grpc.github.io/grpc/node/grpc.Client.html). Also has Stub Calls to match the service defined in your .proto.\n\n\n\n\n'})}}},[["Dtu3",1,0]]]);