(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{IinH:function(e,n,o){"use strict";o.r(n);var t=o("q1tI"),i=o.n(t),a=o("HVSj");n.default=function(e){return i.a.createElement(a.a,{subsection:"Build",content:"# firecomm.build()\n\n```javascript\nconst { build } = require( 'firecomm' );\nconst proto_path = require( '../some/proto/path' );\nconst package = build( proto_path, { bytes: String } );\nmodule.exports = package;\n```\n\nBuild step function for compiling the `proto` into JavaScript.\n\n## firecomm.build(proto_path, configObject)\n\nparameters:\n\n| Name         | Type/Properties | Config Values    | Description                                                                                                    |\n| ------------ | --------------- | ---------------- | ------------------------------------------------------------------------------------------------------------- |\n| proto_path   | String          |                  | Absolute path to the `.proto` file to be compiled into JavaScript                                             |\n| configObject | Object          |                  | *Optional* For configuring compilation. Takes up to nine optional properties                                  |\n|              | keepCase        | boolean          | allows RPC methods to have strict camelCasing or PascalCasing within the compiled `package`.                  |\n|              | longs           | String or Number | `int64`s, `uint64`s, `sint64`s, and `fixed64`s will be coerced into a `String` or a `Number`.                 |\n|              | enum            | String           | Java-like `enumerable` will be accessible from an Integer or from the Enumerable option written as a `String` |\n|              | bytes           | String or Array  | gRPC `byteStrings` will be coerced into a `String` or an `Array`.                                             |\n|              | defaults        | boolean          | allows the setting of default values for `message` types.                                                     |\n|              | arrays          | boolean          | allows the coercion of `repeated` `message` types into `Array`s.                                              |\n|              | objects         | boolean          | allows the coercion of nested `message` types into `Object`s.                                                 |\n|              | oneofs          | boolean          | allows the setting of unique `message` types.                                                                 |\n\nreturns `Package`"})}},"uW/b":function(e,n,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/apireference/buildfunction",function(){var e=o("IinH");return{page:e.default||e}}])}},[["uW/b",1,0]]]);