(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{"9F3F":function(e,n,t){"use strict";t.r(n);var a=t("q1tI"),r=t.n(a),l=t("HVSj"),o=t("D+sC");n.default=function(e){return r.a.createElement(l.a,{subsection:"Stub Calls",content:o.a})}},"D+sC":function(e,n,t){"use strict";n.a="# Calls\n\nCall objects are the primary unit of communication within gRPC. \n\n> NOTE: One call is generated for each method invocation.\n\nThere are two types of call objects you will encounter in Firecomm.\n#### 1.  Server-Side Calls\n   - Passed as the sole argument into each middleware function / method handler\n#### 2. Stub-Side Calls\n  - Returned from invoking a gRPC method on a stub\n\nFirecomm has a unified syntax which makes each of these easy to interact with.\n\n## Server Calls\n\n\n```\n\n## Stub Calls\n\n\n# Call Types\n\n> NOTE: There are eight types of calls in the gRPC ecosystem. \n\nBelow are the four main gRPC method types. \n\n|                      | Client Unary        | Client Streaming    |\n| -------------------- | ------------------- | ------------------- |\n| **Server Unary**     | UnaryCall           | ClientStreamingCall |\n| **Server Streaming** | ServerStreamingCall | DuplexCall          |\n\nBut while there are four types of methods here, there are actually two variations of calls to accompany each method in the quadrant.\n1. Server-Side Call\n2. Stub-Side Call\n\n\n"},FIsk:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/core/stubcalls",function(){var e=t("9F3F");return{page:e.default||e}}])}},[["FIsk",1,0]]]);