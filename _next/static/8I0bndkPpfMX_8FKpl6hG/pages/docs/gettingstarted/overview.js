(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{H8oh:function(e,o,t){"use strict";t.r(o);var i=t("q1tI"),n=t.n(i),r=t("HVSj");o.default=function(e){return n.a.createElement(r.a,{subsection:"Overview",content:"# Overview\n\nFor those familiar with gRPC and looking to dive into code, it may make more sense to skip straght to the [Intro](firecomm.github.io/docs/gettingstarted/intro).\nThis section seeks to provide a brief overview of the core concepts of Firecomm, which mirror the core concepts of gRPC.\n\n> Firecomm is a framework for gRPC which allows Node.js developers to quickly spin up powerful gRPC microservice communication architectures with a simplified API.\n\nFirecomm was designed by a team of Node.js engineers who designed an interal wrapper for Google's gRPC-node library in their microservice architecture journey. Along the way, they created a more consistent and DRY syntax, with support for features like SSL, health-check, and   decided to open-source the project.\n\nThe project is continually maintained, so for those looking to contribute, please do not hesitate to [message the Firecomm team](mailto://firecommgrpc@gmail.com), or make an Issue/PR on our [Github repository](https://github.com/firecomm/firecomm).\n\n\n\n\n\n"})}},xPIh:function(e,o,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/gettingstarted/overview",function(){var e=t("H8oh");return{page:e.default||e}}])}},[["xPIh",1,0]]]);